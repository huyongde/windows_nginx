
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';
	#log_format upstreamlog '[$time_local] $remote_addr - $remote_user - $server_name to: $upstream_addr: $request upstream_response_time $upstream_response_time msec $msec request_time $request_time';
    log_format upstreamlog '$cookie_tsid [$time_local] $remote_addr - $remote_user - $server_name to: $upstream_addr: $status / upstream $upstream_status $request upstream_response_time $upstream_response_time msec $msec request_time $request_time body: $request_body';
	access_log  logs/access.log upstreamlog;
    #access_log  logs/access.log  main;
	rewrite_log on;
	##打开rewrite的log
	error_log logs/error.log notice;
	
    sendfile        on;
    #tcp_nopush     on;
	
	client_max_body_size 64M;
    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;
	upstream smartschool {
		server 10.234.165.186;
		#server 10.222.146.190;
	}
	
	upstream dev_machine {
		server 10.123.9.193:8000;
	}
	
    server {
        listen       80;

        #charset koi8-r;
		location ^~ /api {
			rewrite /api/(.*) /yongdehu_dev_api/$1 break;
			proxy_pass http://smartschool;
			#proxy_redirect off;  ## 用来修改代理到的服务器返回header中的location, off表示禁用所有的proxy_redirect,  proxy_redirect aaaaa  bbb; 作用是把location中的aaaaa替换为bbb之后再返回给客户端。
			#proxy_redirect  http://www.baidu.com/aaaaaaaa  /bbaaa; ## 这个会把值为http://www.baidu.com/aaaaaaaa的location重写为，请求的host+/bbaaa组成的url 
			proxy_redirect  http://www.baidu.com/aaaaaaaa  http://www.baidu.com/bbaaa;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;

		}
		location / {
			proxy_pass http://smartschool;
			proxy_redirect off;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;

		}
		
		
        #location / {   
		#	rewrite /h5/(.*) /h5/app/$1 break;
		#	root   html;
		#	index  index.html index.htm;
        #}

        error_page  404              /40x.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    server {
        listen       8000;
        location / {
            proxy_pass http://dev_machine;
			#proxy_redirect off;  ## 用来修改代理到的服务器返回header中的location, off表示禁用所有的proxy_redirect,  proxy_redirect aaaaa  bbb; 作用是把location中的aaaaa替换为bbb之后再返回给客户端。
			#proxy_redirect  http://www.baidu.com/aaaaaaaa  /bbaaa; ## 这个会把值为http://www.baidu.com/aaaaaaaa的location重写为，请求的host+/bbaaa组成的url 
			#proxy_redirect  http://www.baidu.com/aaaaaaaa  http://www.baidu.com/bbaaa;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
        }
    }


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
